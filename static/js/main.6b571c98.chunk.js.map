{"version":3,"sources":["constants.js","info-box.js","util.js","App.js","index.js"],"names":["fullResMosaics","overviewMosaics","mosaicOptions","key","value","text","InfoBox","props","mosaicYearRange","onChange","zoomIn","panels","title","content","target","rel","href","Icon","name","style","position","width","maxWidth","left","top","padding","maxHeight","zIndex","pointerEvents","overflowY","overflow","Accordion","defaultActiveIndex","styled","Select","options","e","data","getMosaicFromQueryParams","URLSearchParams","location","search","get","getViewStateFromHash","hash","charAt","hashArray","substring","split","map","Number","val","isFinite","zoom","latitude","longitude","viewState","bearing","pitch","Object","keys","forEach","DEFAULT_MAP_STYLE","require","INITIAL_VIEWPORT","naipUrl","mosaicUrl","url","toString","constructMapStyle","fullResMosaicUrl","overviewMosaicUrl","sources","type","tiles","tileSize","minzoom","maxzoom","attribution","Map","NAIPMap","this","mapStyle","viewport","onViewportChange","height","mapOptions","minZoom","source","id","beforeId","paint","right","bottom","unit","React","Component","App","state","window","setState","selected","newParams","params","entries","set","String","newUrlString","pathname","history","replaceState","setQueryParams","mosaic","document","body","margin","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6b571c98.chunk.js","sourcesContent":["// Mapping from mosaic common identifier to URL\nexport const fullResMosaics = {\n  \"2011-2013\":\n    \"dynamodb://us-west-2/74f48044f38db32666078e75f3439d8e62cf9e25820afc79ea6ce19f\",\n  \"2014-2015\":\n    \"dynamodb://us-west-2/5395d9e7bba4eeaa6af4842e1a7b9d3ea9dfc2a74373ae24698809e9\",\n  \"2015-2017\":\n    \"dynamodb://us-west-2/7610d6d77fca346802fb21b89668cb12ef3162a31eb71734a8aaf5de\",\n  \"2016-2018\":\n    \"dynamodb://us-west-2/94c61bd217e1211db47cf7f8b95bbc8e5e7d68a26cd9099319cf15f9\",\n};\n\n// Mapping from mosaic common identifier to URL\nexport const overviewMosaics = {\n  \"2011-2013\":\n    \"s3://mosaics-us-west-2.kylebarron.dev/mosaics/naip/naip_overview_2011_2013.json.gz\",\n  \"2014-2015\":\n    \"s3://mosaics-us-west-2.kylebarron.dev/mosaics/naip/naip_overview_2014_2015.json.gz\",\n  \"2015-2017\":\n    \"s3://mosaics-us-west-2.kylebarron.dev/mosaics/naip/naip_overview_2015_2017.json.gz\",\n  \"2016-2018\":\n    \"s3://mosaics-us-west-2.kylebarron.dev/mosaics/naip/naip_overview_2016_2018.json.gz\",\n};\n\nexport const mosaicOptions = [\n  {\n    key: \"2011-2013\",\n    value: \"2011-2013\",\n    text: \"Imagery Range: 2011-2013\",\n  },\n  {\n    key: \"2014-2015\",\n    value: \"2014-2015\",\n    text: \"Imagery Range: 2014-2015\",\n  },\n  {\n    key: \"2015-2017\",\n    value: \"2015-2017\",\n    text: \"Imagery Range: 2015-2017\",\n  },\n  {\n    key: \"2016-2018\",\n    value: \"2016-2018\",\n    text: \"Imagery Range: 2016-2018\",\n  },\n];\n","import React from \"react\";\nimport { Accordion, Select, Icon } from \"semantic-ui-react\";\nimport { mosaicOptions } from \"./constants\";\n\nexport default function InfoBox(props) {\n  const { mosaicYearRange, onChange, zoomIn } = props;\n\n  const panels = [\n    {\n      key: \"header\",\n      title: \"Serverless High-Resolution Imagery\",\n      content: {\n        content: (\n          <p>\n            Serverless high-resolution (up to 0.6m){\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/\"\n            >\n              NAIP\n            </a>{\" \"}\n            map tiles, generated on demand from an{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://registry.opendata.aws/naip/\"\n            >\n              AWS public dataset\n            </a>{\" \"}\n            of Cloud-Optimized GeoTIFFs.\n            <br />\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/kylebarron/naip-cogeo-mosaic\"\n            >\n              <Icon name=\"github\" />\n              Github\n            </a>\n            <br />\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://kylebarron.dev/blog/cog-mosaic/naip\"\n            >\n              <Icon name=\"book\" />\n              Blog post\n            </a>\n          </p>\n        ),\n      },\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        width: 300,\n        maxWidth: 400,\n        left: 5,\n        top: 5,\n        padding: 5,\n        maxHeight: \"70%\",\n        zIndex: 1,\n        // backgroundColor: \"#fff\",\n        pointerEvents: \"auto\",\n        overflowY: \"auto\",\n        overflow: \"visible\",\n      }}\n    >\n      <Accordion defaultActiveIndex={0} styled panels={panels} />\n      {/* <Header as=\"h3\">Serverless High-Res Imagery</Header> */}\n\n      {zoomIn && (\n        <p>\n          <b> Zoom in to see imagery. </b>\n        </p>\n      )}\n      <Select\n        style={{ width: \"100%\" }}\n        options={mosaicOptions}\n        value={mosaicYearRange}\n        onChange={(e, data) => onChange(data.value)}\n      />\n    </div>\n  );\n}\n","/* eslint-disable no-restricted-globals */\nexport function getMosaicFromQueryParams() {\n  const params = new URLSearchParams(location.search);\n  return params.get(\"mosaic\");\n}\n\nexport function setQueryParams(newParams = {}) {\n  const params = new URLSearchParams(location.search);\n\n  for (const [key, value] of Object.entries(newParams)) {\n    params.set(String(key), String(value));\n  }\n\n  const newUrlString = `${location.pathname}?${params.toString()}${\n    location.hash\n  }`;\n  window.history.replaceState({}, \"\", newUrlString);\n}\n/* eslint-enable no-restricted-globals */\n\n/**\n * Get ViewState from page URL hash\n * Note: does not necessarily return all viewState fields\n * @param {string} hash Page URL hash\n */\nexport function getViewStateFromHash(hash) {\n  if (!hash || hash.charAt(0) !== \"#\") {\n    return;\n  }\n\n  // Split the hash into an array of numbers\n  let hashArray = hash\n    // Remove # symbol\n    .substring(1)\n    .split(\"/\")\n    .map(Number);\n\n  // Remove non-numeric values\n  hashArray = hashArray.map((val) => (Number.isFinite(val) && val) || null);\n\n  // Order of arguments:\n  // https://docs.mapbox.com/mapbox-gl-js/api/\n  const [zoom, latitude, longitude, bearing, pitch] = hashArray;\n  const viewState = {\n    bearing,\n    latitude,\n    longitude,\n    pitch,\n    zoom,\n  };\n\n  // Delete null keys\n  // https://stackoverflow.com/a/38340730\n  Object.keys(viewState).forEach(\n    (key) => viewState[key] == null && delete viewState[key]\n  );\n\n  return viewState;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport ReactMapGL, {\n  NavigationControl,\n  ScaleControl,\n  Layer,\n} from \"react-map-gl\";\nimport { Map } from \"immutable\";\nimport InfoBox from \"./info-box\";\nimport {\n  getViewStateFromHash,\n  setQueryParams,\n  getMosaicFromQueryParams,\n} from \"./util\";\nimport { fullResMosaics, overviewMosaics } from \"./constants\";\nconst DEFAULT_MAP_STYLE = require(\"./style.json\");\n\nconst INITIAL_MOSAIC_YEAR_RANGE = \"2016-2018\";\nconst INITIAL_VIEWPORT = {\n  latitude: 36.07832,\n  longitude: -111.8695,\n  zoom: 13,\n  bearing: 0,\n  pitch: 0,\n};\n\nfunction naipUrl(mosaicUrl) {\n  // Do saturation client side for speed\n  // const color_ops = \"sigmoidal RGB 4 0.5, saturation 1.25\";\n  const params = {\n    url: mosaicUrl,\n  };\n  const searchParams = new URLSearchParams(params);\n  let baseUrl = \"https://us-west-2-lambda.kylebarron.dev/naip/{z}/{x}/{y}.jpg?\";\n  return baseUrl + searchParams.toString();\n}\n\nfunction constructMapStyle(mosaicYearRange) {\n  const fullResMosaicUrl = fullResMosaics[mosaicYearRange];\n  const overviewMosaicUrl = overviewMosaics[mosaicYearRange];\n\n  DEFAULT_MAP_STYLE.sources[\"naip\"] = {\n    type: \"raster\",\n    tiles: [naipUrl(fullResMosaicUrl)],\n    tileSize: 256,\n    minzoom: 12,\n    maxzoom: 18,\n    attribution:\n      '<a href=\"https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/\" target=\"_blank\">© USDA</a>',\n  };\n  DEFAULT_MAP_STYLE.sources[\"naip-overview\"] = {\n    type: \"raster\",\n    tiles: [naipUrl(overviewMosaicUrl)],\n    tileSize: 256,\n    minzoom: 6,\n    maxzoom: 11,\n    attribution:\n      '<a href=\"https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/\" target=\"_blank\">© USDA</a>',\n  };\n  return Map(DEFAULT_MAP_STYLE);\n}\n\nclass NAIPMap extends React.Component {\n  render() {\n    const { mapStyle, viewport, onViewportChange } = this.props;\n\n    return (\n      <ReactMapGL\n        {...viewport}\n        width=\"100vw\"\n        height=\"100vh\"\n        mapOptions={{ hash: true }}\n        mapStyle={mapStyle}\n        onViewportChange={onViewportChange}\n        minZoom={4.5}\n      >\n        <Layer\n          source=\"naip-overview\"\n          id=\"naip-layer-overview\"\n          type=\"raster\"\n          // No maxzoom to allow overzooming of imagery while higher-resolution\n          // images load\n          // Would be ideal to have all zooms at a single url root with a proxy\n          // No maxzoom means zoom-12 tiles will load at higher zooms if panning\n          // enough\n          // maxzoom={12.5}\n          beforeId=\"tunnel_motorway_link_casing\"\n          paint={{\n            \"raster-saturation\": 0.35,\n          }}\n        />\n        <Layer\n          source=\"naip\"\n          id=\"naip-layer\"\n          type=\"raster\"\n          beforeId=\"tunnel_motorway_link_casing\"\n          paint={{\n            \"raster-saturation\": 0.35,\n          }}\n        />\n\n        <div style={{ position: \"absolute\", right: 10, top: 10 }}>\n          <NavigationControl />\n        </div>\n\n        <div style={{ position: \"absolute\", bottom: 10, left: 10 }}>\n          <ScaleControl maxWidth={100} unit={\"imperial\"} />\n        </div>\n      </ReactMapGL>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    viewport: {\n      ...INITIAL_VIEWPORT,\n      ...getViewStateFromHash(window.location.hash),\n    },\n    mosaicYearRange: getMosaicFromQueryParams() || INITIAL_MOSAIC_YEAR_RANGE,\n    mapStyle: constructMapStyle(\n      getMosaicFromQueryParams() || INITIAL_MOSAIC_YEAR_RANGE\n    ),\n  };\n\n  render() {\n    const { mosaicYearRange, mapStyle, viewport } = this.state;\n    return (\n      <div>\n        <NAIPMap\n          mapStyle={mapStyle}\n          viewport={viewport}\n          onViewportChange={(viewport) => this.setState({ viewport })}\n        />\n        <InfoBox\n          mosaicYearRange={mosaicYearRange}\n          zoomIn={viewport.zoom < 4.5}\n          onChange={(selected) => {\n            setQueryParams({ mosaic: selected });\n            this.setState({\n              mosaicYearRange: selected,\n              mapStyle: constructMapStyle(selected),\n            });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\ndocument.body.style.margin = 0;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}